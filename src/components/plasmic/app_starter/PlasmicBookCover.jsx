// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dbeKNvcYS5fVFf4AbsLUVf
// Component: jhl2LI0Zi7lZ
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  renderPlasmicSlot,
  useCurrentUser
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { usePlasmicDataOp } from "@plasmicapp/react-web/lib/data-sources";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: dbeKNvcYS5fVFf4AbsLUVf/projectcss
import sty from "./PlasmicBookCover.module.css"; // plasmic-import: jhl2LI0Zi7lZ/css

createPlasmicElementProxy;

export const PlasmicBookCover__VariantProps = new Array();

export const PlasmicBookCover__ArgProps = new Array("title", "title2");

const $$ = {};

function PlasmicBookCover__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  let [$queries, setDollarQueries] = React.useState({});
  const new$Queries = {
    query: usePlasmicDataOp(() => {
      return {
        sourceId: "xtmnhHi6d7L7uQTqVHL3aV",
        opId: "44e31c76-20f4-4427-8be9-00147cefb1f9",
        userArgs: {},
        cacheKey: `plasmic.$.44e31c76-20f4-4427-8be9-00147cefb1f9.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
    $queries = new$Queries;
  }
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.root
      )}
    >
      <h1
        data-plasmic-name={"h1"}
        data-plasmic-override={overrides.h1}
        className={classNames(projectcss.all, projectcss.h1, sty.h1)}
      >
        {renderPlasmicSlot({
          defaultContents: "You won't believe what happens next.",
          value: args.title
        })}
      </h1>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "h1"],
  h1: ["h1"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBookCover__ArgProps,
          internalVariantPropNames: PlasmicBookCover__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBookCover__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBookCover";
  } else {
    func.displayName = `PlasmicBookCover.${nodeName}`;
  }
  return func;
}

export const PlasmicBookCover = Object.assign(
  // Top-level PlasmicBookCover renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h1: makeNodeComponent("h1"),
    // Metadata about props expected for PlasmicBookCover
    internalVariantProps: PlasmicBookCover__VariantProps,
    internalArgProps: PlasmicBookCover__ArgProps
  }
);

export default PlasmicBookCover;
/* prettier-ignore-end */
